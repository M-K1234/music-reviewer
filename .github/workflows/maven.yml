# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.PASSWORD }}  # Bruger PASSWORD-secreten
          MYSQL_DATABASE: ${{ secrets.DATABASE_NAME }}  # Bruger DATABASE_NAME-secreten
        ports:
          - "3306:3306"
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -p${{ secrets.PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h localhost -u root -p${{ secrets.PASSWORD }} --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Run Maven build
      env:
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}  # Bruger DATABASE_NAME-secreten
        DATABASE_URL: ${{ secrets.DATABASE_URL }}   # Bruger DATABASE_URL-secreten
        USERNAME: ${{ secrets.USERNAME }}  # Bruger USERNAME-secreten
        PASSWORD: ${{ secrets.PASSWORD }}  # Bruger PASSWORD-secreten
      run: mvn -B package --file pom.xml